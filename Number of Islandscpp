class Solution {
public:
vector<vector<int>>dir{{1, 0}, {0, 1}, {-1, 0}, {0, -1}};

void helper(vector<vector<char>>& grid,int i,int j){
    if(grid[i][j]=='0') return ;
    grid[i][j]='0';
    for(auto it :dir){
        int x=i+it[0];
        int y=j+it[1];
        if(x>=0 && x<grid.size() && y>=0 && y<grid[0].size() && grid[x][y]=='1'){
            helper(grid,x,y);
        }
    }

    return ;

}
    int numIslands(vector<vector<char>>& grid) {
        int ans=0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]=='1'){
                    ans++;
                    helper(grid,i,j);
                }
            }
        }

        return ans;
    }
};
